{"is_source_file": true, "format": "TypeScript", "description": "This file defines an Angular service 'AuthService' responsible for handling user authentication tasks such as login, registration, token management, and logout. It includes interfaces for user credentials and authentication responses.", "external_files": ["@angular/core", "@angular/common/http", "rxjs"], "external_methods": ["inject(HttpClient)", "localStorage.getItem", "localStorage.setItem", "localStorage.removeItem"], "published": ["AuthService", "UserLogin", "UserRegister", "AuthResponse"], "classes": [{"name": "AuthService", "description": "Provides methods to authenticate users, manage tokens, and track login state within an Angular application."}], "methods": [{"name": "login", "description": "Sends user credentials to the backend to authenticate and obtain an access token. Updates login state upon success."}, {"name": "register", "description": "Registers a new user with the backend and manages authentication tokens upon success."}, {"name": "logout", "description": "Logs out the current user by removing the stored token and updating login state."}, {"name": "getToken", "description": "Retrieves the stored access token from local storage, if available."}, {"name": "hasToken", "description": "Checks whether a valid token exists in local storage, indicating a user is logged in."}, {"name": "setToken", "description": "Stores the provided token in local storage."}, {"name": "clearToken", "description": "Removes the token from local storage."}], "calls": ["this.http.post<AuthResponse>()", "this.setToken()", "localStorage.getItem()", "localStorage.setItem()", "localStorage.removeItem()"], "search-terms": ["Angular AuthService", "token management", "HttpClient POST login", "BehaviorSubject isLoggedIn", "localStorage token storage", "Angular dependency injection", "RxJS tap operator"], "state": 2, "file_id": 23, "knowledge_revision": 47, "git_revision": "", "ctags": [{"_type": "tag", "name": "AuthResponse", "path": "/home/kavia/workspace/code-generation/notes-management-system-c8074e70/notes_frontend/src/app/services/auth.service.ts", "pattern": "/^export interface AuthResponse {$/", "language": "TypeScript", "kind": "interface"}, {"_type": "tag", "name": "AuthService", "path": "/home/kavia/workspace/code-generation/notes-management-system-c8074e70/notes_frontend/src/app/services/auth.service.ts", "pattern": "/^export class AuthService {$/", "language": "TypeScript", "kind": "class"}, {"_type": "tag", "name": "UserLogin", "path": "/home/kavia/workspace/code-generation/notes-management-system-c8074e70/notes_frontend/src/app/services/auth.service.ts", "pattern": "/^export interface UserLogin {$/", "language": "TypeScript", "kind": "interface"}, {"_type": "tag", "name": "UserRegister", "path": "/home/kavia/workspace/code-generation/notes-management-system-c8074e70/notes_frontend/src/app/services/auth.service.ts", "pattern": "/^export interface UserRegister extends UserLogin {}$/", "language": "TypeScript", "kind": "interface"}, {"_type": "tag", "name": "access_token", "path": "/home/kavia/workspace/code-generation/notes-management-system-c8074e70/notes_frontend/src/app/services/auth.service.ts", "pattern": "/^  access_token: string;$/", "language": "TypeScript", "kind": "property", "scope": "AuthResponse", "scopeKind": "interface"}, {"_type": "tag", "name": "http", "path": "/home/kavia/workspace/code-generation/notes-management-system-c8074e70/notes_frontend/src/app/services/auth.service.ts", "pattern": "/^  private http = inject(HttpClient);$/", "language": "TypeScript", "kind": "property", "scope": "AuthService", "scopeKind": "class"}, {"_type": "tag", "name": "password", "path": "/home/kavia/workspace/code-generation/notes-management-system-c8074e70/notes_frontend/src/app/services/auth.service.ts", "pattern": "/^  password: string;$/", "language": "TypeScript", "kind": "property", "scope": "UserLogin", "scopeKind": "interface"}, {"_type": "tag", "name": "token_type", "path": "/home/kavia/workspace/code-generation/notes-management-system-c8074e70/notes_frontend/src/app/services/auth.service.ts", "pattern": "/^  token_type: string;$/", "language": "TypeScript", "kind": "property", "scope": "AuthResponse", "scopeKind": "interface"}, {"_type": "tag", "name": "username", "path": "/home/kavia/workspace/code-generation/notes-management-system-c8074e70/notes_frontend/src/app/services/auth.service.ts", "pattern": "/^  username: string;$/", "language": "TypeScript", "kind": "property", "scope": "UserLogin", "scopeKind": "interface"}], "hash": "58d96bb48d7e150c291ad1c9c74ae88a", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/src/app/services/auth.service.ts", "fields": [{"name": "export interface AuthResponse {", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "export interface UserLogin {", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "export interface UserRegister extends UserLogin {}", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "access_token: string;", "scope": "AuthResponse", "scopeKind": "interface", "description": "unavailable"}, {"name": "private http = inject(HttpClient);", "scope": "AuthService", "scopeKind": "class", "description": "unavailable"}, {"name": "password: string;", "scope": "UserLogin", "scopeKind": "interface", "description": "unavailable"}, {"name": "token_type: string;", "scope": "AuthResponse", "scopeKind": "interface", "description": "unavailable"}, {"name": "username: string;", "scope": "UserLogin", "scopeKind": "interface", "description": "unavailable"}], "revision_history": [{"47": ""}]}